#include <stdio.h>

int main() {
    // Declaração das variáveis para armazenar os dados da Carta 1
    char estado1;         // Variável para armazenar a inicial do estado (A a H) da Carta 1
    char codigo1[4];      // Array de caracteres para armazenar o código da Carta 1 (ex: A01), com espaço para o caractere nulo
    char nomeCidade1[50]; // Array de caracteres para armazenar o nome da cidade da Carta 1, com espaço para o caractere nulo
    int populacao1;       // Variável para armazenar a população da Carta 1
    float area1;          // Variável para armazenar a área da Carta 1 (em km²)
    float pib1;           // Variável para armazenar o PIB da Carta 1 (em bilhões de reais)
    int pontosTuristicos1;// Variável para armazenar o número de pontos turísticos da Carta 1

    // Declaração das variáveis para armazenar os dados da Carta 2
    char estado2;         // Variável para armazenar a inicial do estado (A a H) da Carta 2
    char codigo2[4];      // Array de caracteres para armazenar o código da Carta 2 (ex: B02), com espaço para o caractere nulo
    char nomeCidade2[50]; // Array de caracteres para armazenar o nome da cidade da Carta 2, com espaço para o caractere nulo
    int populacao2;       // Variável para armazenar a população da Carta 2
    float area2;          // Variável para armazenar a área da Carta 2 (em km²)
    float pib2;           // Variável para armazenar o PIB da Carta 2 (em bilhões de reais)
    int pontosTuristicos2;// Variável para armazenar o número de pontos turísticos da Carta 2

    // Início da seção de entrada de dados para a Carta 1
    printf("Cadastro da Carta 1:\n"); // Imprime uma mensagem indicando o início do cadastro da Carta 1
    printf("Informe o Estado (A a H): "); // Solicita ao usuário que informe a inicial do estado
    scanf(" %c", &estado1);             // Lê um único caractere (a inicial do estado) e armazena em estado1. O espaço antes de %c consome qualquer espaço em branco deixado pela leitura anterior.
    printf("Informe o Código da Carta (ex: A01): "); // Solicita ao usuário que informe o código da carta
    scanf("%s", codigo1);                 // Lê uma sequência de caracteres (string) até encontrar um espaço em branco e armazena em codigo1.
    printf("Informe o Nome da Cidade: "); // Solicita ao usuário que informe o nome da cidade
    scanf(" %[^\n]", nomeCidade1);       // Lê uma linha inteira de caracteres (string) até encontrar um caractere de nova linha (\n) e armazena em nomeCidade1. O espaço antes de %[^\n] consome qualquer espaço em branco deixado pela leitura anterior.
    printf("Informe a População: ");    // Solicita ao usuário que informe a população
    scanf("%d", &populacao1);             // Lê um número inteiro e armazena em populacao1.
    printf("Informe a Área (em km²): "); // Solicita ao usuário que informe a área
    scanf("%f", &area1);                 // Lê um número de ponto flutuante e armazena em area1.
    printf("Informe o PIB (em bilhões de reais): "); // Solicita ao usuário que informe o PIB
    scanf("%f", &pib1);                  // Lê um número de ponto flutuante e armazena em pib1.
    printf("Informe o Número de Pontos Turísticos: "); // Solicita ao usuário que informe o número de pontos turísticos
    scanf("%d", &pontosTuristicos1);      // Lê um número inteiro e armazena em pontosTuristicos1.

    // Início da seção de entrada de dados para a Carta 2
    printf("\nCadastro da Carta 2:\n"); // Imprime uma mensagem indicando o início do cadastro da Carta 2
    printf("Informe o Estado (A a H): "); // Solicita ao usuário que informe a inicial do estado
    scanf(" %c", &estado2);             // Lê um único caractere (a inicial do estado) e armazena em estado2. O espaço antes de %c consome qualquer espaço em branco deixado pela leitura anterior.
    printf("Informe o Código da Carta (ex: B02): "); // Solicita ao usuário que informe o código da carta
    scanf("%s", codigo2);                 // Lê uma sequência de caracteres (string) até encontrar um espaço em branco e armazena em codigo2.
    printf("Informe o Nome da Cidade: "); // Solicita ao usuário que informe o nome da cidade
    scanf(" %[^\n]", nomeCidade2);       // Lê uma linha inteira de caracteres (string) até encontrar um caractere de nova linha (\n) e armazena em nomeCidade2. O espaço antes de %[^\n] consome qualquer espaço em branco deixado pela leitura anterior.
    printf("Informe a População: ");    // Solicita ao usuário que informe a população
    scanf("%d", &populacao2);             // Lê um número inteiro e armazena em populacao2.
    printf("Informe a Área (em km²): "); // Solicita ao usuário que informe a área
    scanf("%f", &area2);                 // Lê um número de ponto flutuante e armazena em area2.
    printf("Informe o PIB (em bilhões de reais): "); // Solicita ao usuário que informe o PIB
    scanf("%f", &pib2);                  // Lê um número de ponto flutuante e armazena em pib2.
    printf("Informe o Número de Pontos Turísticos: "); // Solicita ao usuário que informe o número de pontos turísticos
    scanf("%d", &pontosTuristicos2);      // Lê um número inteiro e armazena em pontosTuristicos2.

    // Início da seção de exibição dos dados da Carta 1
    printf("\nCarta 1:\n");                 // Imprime um cabeçalho para os dados da Carta 1
    printf("Estado: %c\n", estado1);       // Imprime o valor da variável estado1
    printf("Código: %s\n", codigo1);       // Imprime o valor da string codigo1
    printf("Nome da Cidade: %s\n", nomeCidade1); // Imprime o valor da string nomeCidade1
    printf("População: %d\n", populacao1);   // Imprime o valor da variável populacao1
    printf("Área: %.2f km²\n", area1);     // Imprime o valor da variável area1 formatado para duas casas decimais
    printf("PIB: %.2f bilhões de reais\n", pib1); // Imprime o valor da variável pib1 formatado para duas casas decimais
    printf("Número de Pontos Turísticos: %d\n", pontosTuristicos1); // Imprime o valor da variável pontosTuristicos1

    // Início da seção de exibição dos dados da Carta 2
    printf("\nCarta 2:\n");                 // Imprime um cabeçalho para os dados da Carta 2
    printf("Estado: %c\n", estado2);       // Imprime o valor da variável estado2
    printf("Código: %s\n", codigo2);       // Imprime o valor da string codigo2
    printf("Nome da Cidade: %s\n", nomeCidade2); // Imprime o valor da string nomeCidade2
    printf("População: %d\n", populacao2);   // Imprime o valor da variável populacao2
    printf("Área: %.2f km²\n", area2);     // Imprime o valor da variável area2 formatado para duas casas decimais
    printf("PIB: %.2f bilhões de reais\n", pib2); // Imprime o valor da variável pib2 formatado para duas casas decimais
    printf("Número de Pontos Turísticos: %d\n", pontosTuristicos2); // Imprime o valor da variável pontosTuristicos2

    return 0; // Indica que o programa foi executado com sucesso
}



//parte 2 do desafio nivel aventureiro//



#include <stdio.h>
#include <string.h>
#include <stdlib.h> // Para atof (não está sendo usado neste código)

// Definição da função limparBuffer fora da função main
void limparBuffer() {
    // Utiliza o operador vírgula e o operador condicional (ternário) para simular a lógica do while.
    // A expressão continua enquanto getchar() não for '\n' e não for EOF.
    // O resultado de cada getchar() é descartado, e a última expressão (0) é o resultado final.
    (getchar() != '\n' && !feof(stdin)) ? (limparBuffer()) : (void)0;
}

// Função para calcular a densidade populacional
float calcularDensidadePopulacional(int populacao, float area) {
    // Utiliza o operador condicional (ternário) para evitar if-else.
    return (area > 0) ? (float)populacao / area : 0;
}

// Função para calcular o PIB per capita
float calcularPibPerCapita(float pib, int populacao) {
    // Utiliza o operador condicional (ternário) para evitar if-else.
    return (populacao > 0) ? (pib * 1000000000) / populacao : 0;
}

// Função para ler os dados de uma carta
void lerCarta(int numeroCarta, char *estado, char *codigo, char *nomeCidade, int *populacao, float *area, float *pib, int *pontosTuristicos) {
    printf("Cadastro da Carta %d:\n\n", numeroCarta);
    printf("Informe o Estado (A a H): ");
    scanf(" %c", estado);
    limparBuffer();
    printf("\n");
    printf("Informe o Código da Carta (ex: A01): ");
    scanf("%4s", codigo);
    limparBuffer();
    printf("\n");
    printf("Informe o Nome da Cidade: ");
    scanf("%50[^\n]", nomeCidade);
    limparBuffer();
    printf("\n");
    printf("Informe a População: ");
    scanf("%d", populacao);
    limparBuffer();
    printf("\n");
    printf("Informe a Área (em km²): ");
    scanf("%f", area);
    limparBuffer();
    printf("\n");
    printf("Informe o PIB (em bilhões de reais): ");
    scanf("%f", pib);
    limparBuffer();
    printf("\n");
    printf("Informe o Número de Pontos Turísticos: ");
    scanf("%d", pontosTuristicos);
    limparBuffer();
    printf("\n");
}

// Função para exibir os dados de uma carta
void exibirCarta(int numeroCarta, char estado, char *codigo, char *nomeCidade, int populacao, float area, float pib, int pontosTuristicos, float densidadePopulacional, float pibPerCapita) {
    printf("Carta %d:\n", numeroCarta);
    printf("Estado: %c\n", estado);
    printf("Código: %s\n", codigo);
    printf("Nome da Cidade: %s\n", nomeCidade);
    printf("População: %d\n", populacao);
    printf("Área: %.2f km²\n", area);
    printf("PIB: %.2f bilhões de reais\n", pib);
    printf("Número de Pontos Turísticos: %d\n", pontosTuristicos);
    printf("Densidade Populacional: %.2f hab/km²\n", densidadePopulacional);
    printf("PIB per Capita: R$ %.2f\n", pibPerCapita);
    printf("\n");
}

int main() {
    // Carta 1
    char estado1;
    char codigo1[5];
    char nomeCidade1[51];
    int populacao1;
    float area1;
    float pib1;
    int pontosTuristicos1;
    float densidadePopulacional1;
    float pibPerCapita1;

    // Carta 2
    char estado2;
    char codigo2[5];
    char nomeCidade2[51];
    int populacao2;
    float area2;
    float pib2;
    int pontosTuristicos2;
    float densidadePopulacional2;
    float pibPerCapita2;

    // Entrada dos dados da Carta 1
    lerCarta(1, &estado1, codigo1, nomeCidade1, &populacao1, &area1, &pib1, &pontosTuristicos1);

    // Entrada dos dados da Carta 2
    lerCarta(2, &estado2, codigo2, nomeCidade2, &populacao2, &area2, &pib2, &pontosTuristicos2);

    // Cálculo da densidade populacional e PIB per capita
    densidadePopulacional1 = calcularDensidadePopulacional(populacao1, area1);
    pibPerCapita1 = calcularPibPerCapita(pib1, populacao1);
    densidadePopulacional2 = calcularDensidadePopulacional(populacao2, area2);
    pibPerCapita2 = calcularPibPerCapita(pib2, populacao2);

    // Exibição dos dados da Carta 1
    exibirCarta(1, estado1, codigo1, nomeCidade1, populacao1, area1, pib1, pontosTuristicos1, densidadePopulacional1, pibPerCapita1);

    // Exibição dos dados da Carta 2
    exibirCarta(2, estado2, codigo2, nomeCidade2, populacao2, area2, pib2, pontosTuristicos2, densidadePopulacional2, pibPerCapita2);

    return 0;
}